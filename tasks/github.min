#!/usr/bin/env min

; Read files
".env.yml" fread from-yaml :vars
"min.yml" fread from-yaml :config
"next-release.md" fread escape :release-body
"tasks/templates/draft-release.json" fread :draft-release-template 

config /version :min-version
vars /github-token :token
draft-release-template ("version" min-version "body" release-body) =% :draft-release-body

; Helper symbols
{}  
  "application/vnd.github.v3+json" %Accept
  "token $#" (token) =% %Authorization  
:headers

(
  response to-json "response.json" fwrite
  response /body from-json :body
  response /status :status
  (status 300 >) (
    body /message :message
    status string @status
    "Error $#: $#" (status message) =% error status int exit
  ) when
) :handle-errors
(
  :data
  data /endpoint :endpoint
  "api" :subdomain
  "https://api.github.com/repos/h3rald/min$#" (endpoint) =% :url
  {}
    url %url
    data /method %method
    (data ?headers) 
      (data /headers %headers) 
      (headers %headers) 
    if
    (data ?body) (data /body %body) when
  request :response 
  response /status :status
  response /body :body
  handle-errors
  body from-json
) :gh-req

; Module symbols
(
  {}
    "/releases" %endpoint
    "POST" %method
    draft-release-body %body
  gh-req /id string :id
  ; Save Release ID to min.yml
  config id %id to-yaml "min.yml" fwrite
  "Draft release v$# ($#) created successfully" (min-version id) =% notice
) %draft
(
  config /id :id
  {}
    "/releases/$#" (id) =% %endpoint
    "PATCH" %method
    draft-release-body %body
  gh-req /id string :id
  "Draft release v$# ($#) updated successfully" (min-version id) =% notice
) %update
(
  config /id :id
  {}
    "/releases/$#/assets" (id) =% %endpoint
    "GET" %method
  gh-req =assets 
  assets size :total
  "There are $# assets in release $#" (total min-version) =% notice
  assets ("- $#" swap cons % notice) foreach 
  assets
) %assets
(
  config /id :id
  . ls ("\.zip$" match) filter
  (
    filename :file
    "Uploading: $#" (file) =% notice
    file fread :body
    headers "application/zip" %Content-Type :asset-headers
    {}
      "/releases/$#/assets" (id) =% %endpoint
      asset-headers %headers
      "POST" %method
      body %body
    gh-req 
  ) foreach
) %upload
+github-tasks


